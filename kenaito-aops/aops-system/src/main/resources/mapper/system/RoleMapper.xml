<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.odboy.core.dal.mysql.system.RoleMapper">
    <resultMap id="BaseResultMap" type="cn.odboy.core.dal.dataobject.system.RoleDO">
        <id column="role_role_id" property="id"/>
        <result column="role_name" property="name"/>
        <result column="role_data_scope" property="dataScope"/>
        <result column="role_level" property="level"/>
        <result column="role_description" property="description"/>
        <result column="role_create_by" property="createBy"/>
        <result column="role_update_by" property="updateBy"/>
        <result column="role_create_time" property="createTime"/>
        <result column="role_update_time" property="updateTime"/>
        <collection property="menus" ofType="cn.odboy.core.dal.dataobject.system.MenuDO">
            <id column="menu_id" property="id"/>
            <result column="menu_title" property="title"/>
            <result column="menu_permission" property="permission"/>
        </collection>
        <collection property="depts" ofType="cn.odboy.core.dal.dataobject.system.DeptDO">
            <id column="dept_id" property="id"/>
            <result column="dept_name" property="name"/>
        </collection>
    </resultMap>
    <select id="queryRoleList" resultType="cn.odboy.core.dal.dataobject.system.RoleDO">
        select role_id as id, name, level
        from system_role
        order by level
    </select>
    <select id="queryRoleListByArgs" resultMap="BaseResultMap">
        select roleDO.*,
        deptDO.dept_id as dept_id, deptDO.name as dept_name,
        menuDO.menu_id as menu_id, menuDO.title as menu_title, menuDO.permission as menu_permission
        from (
        select
        roleDO.role_id as role_role_id, roleDO.name as role_name, roleDO.data_scope as role_data_scope,
        roleDO.level as role_level, roleDO.description as role_description, roleDO.create_by as role_create_by,
        roleDO.update_by as role_update_by, roleDO.create_time as role_create_time, roleDO.update_time as
        role_update_time
        from system_role roleDO
        <where>
            <if test="args.blurry != null and args.blurry != ''">
                and (
                roleDO.name like concat('%', #{args.blurry}, '%')
                or roleDO.description like concat('%', #{args.blurry}, '%')
                )
            </if>
            <if test="args.createTime != null and args.createTime.size() != 0">
                and roleDO.create_time between #{args.createTime[0]} and #{args.createTime[1]}
            </if>
        </where>
        order by roleDO.level
        <if test="args.offset != null">
            limit #{args.offset}, #{args.size}
        </if>
        ) roleDO
        left join system_roles_menus srm on roleDO.role_role_id = srm.role_id
        left join system_menu menuDO on menuDO.menu_id = srm.menu_id
        left join system_roles_depts srd on roleDO.role_role_id = srd.role_id
        left join system_dept deptDO on deptDO.dept_id = srd.dept_id
        order by roleDO.role_level
    </select>
    <select id="getRoleCountByArgs" resultType="java.lang.Long">
        select count(*)
        from system_role roleDO
        <where>
            <if test="args.blurry != null and args.blurry != ''">
                and (
                roleDO.name like concat('%', #{args.blurry}, '%')
                or roleDO.description like concat('%', #{args.blurry}, '%')
                )
            </if>
            <if test="args.createTime != null and args.createTime.size() != 0">
                and roleDO.create_time between #{args.createTime[0]} and #{args.createTime[1]}
            </if>
        </where>
    </select>
    <select id="getRoleByName" resultType="cn.odboy.core.dal.dataobject.system.RoleDO">
        select role_id as id
        from system_role
        where name = #{name}
    </select>
    <select id="getRoleById" resultMap="BaseResultMap">
        select roleDO.role_id as role_role_id,
        roleDO.name as role_name,
        roleDO.data_scope as role_data_scope,
        roleDO.level as role_level,
        roleDO.description as role_description,
        roleDO.create_by as role_create_by,
        roleDO.update_by as role_update_by,
        roleDO.create_time as role_create_time,
        roleDO.update_time as role_update_time,
        deptDO.dept_id as dept_id,
        deptDO.name as dept_name,
        menuDO.menu_id as menu_id,
        menuDO.title as menu_title,
        menuDO.permission as menu_permission
        from system_role roleDO
        left join system_roles_menus srm on roleDO.role_id = srm.role_id
        left join system_menu menuDO on menuDO.menu_id = srm.menu_id
        left join system_roles_depts srd on roleDO.role_id = srd.role_id
        left join system_dept deptDO on deptDO.dept_id = srd.dept_id
        where roleDO.role_id = #{roleId}
    </select>
    <select id="queryRoleListByUserId" resultMap="BaseResultMap">
        SELECT roleDO.role_id as role_role_id,
        roleDO.name as role_name,
        roleDO.data_scope as role_data_scope,
        roleDO.level as role_level,
        roleDO.description as role_description,
        roleDO.create_by as role_create_by,
        roleDO.update_by as role_update_by,
        roleDO.create_time as role_create_time,
        roleDO.update_time as role_update_time,
        deptDO.dept_id as dept_id,
        deptDO.name as dept_name,
        menuDO.menu_id as menu_id,
        menuDO.title as menu_title,
        menuDO.permission as menu_permission
        from system_role roleDO
        left join system_roles_menus srm on roleDO.role_id = srm.role_id
        left join system_menu menuDO on menuDO.menu_id = srm.menu_id
        left join system_roles_depts srd on roleDO.role_id = srd.role_id
        left join system_dept deptDO on deptDO.dept_id = srd.dept_id
        left join system_users_roles ur on roleDO.role_id = ur.role_id
        WHERE roleDO.role_id = ur.role_id
        AND ur.user_id = #{userId}
    </select>
    <select id="getRoleCountByDeptIds" resultType="int">
        select count(*)
        from system_role r, system_roles_depts d
        where r.role_id = d.role_id
        and d.dept_id in
        <foreach collection="deptIds" item="deptId" open="(" separator="," close=")">
            #{deptId}
        </foreach>
    </select>
    <select id="queryRoleListByMenuId" resultType="cn.odboy.core.dal.dataobject.system.RoleDO">
        SELECT roleDO.role_id as id
        FROM system_role roleDO,
        system_roles_menus rm
        WHERE roleDO.role_id = rm.role_id
        AND rm.menu_id = #{menuId}
    </select>
</mapper>
